// Internationalization System
const translations = {
  en: {
    app_title: 'Banker\'s Algorithm',
    nav_home: 'Home',
    nav_theory: 'Theory',
    nav_simulator: 'Simulator',
    nav_banking: 'Banking',
    hero_window_title: 'Banker\'s Algorithm Simulator',
    hero_title: 'Banker\'s Algorithm',
    hero_subtitle: 'Deadlock Avoidance Made Simple',
    hero_description: 'An interactive visualization of the classic operating system algorithm that prevents deadlock by ensuring safe resource allocation.',
    run_check: 'Run Safety Check',
    learn_more: 'Learn More',
    simulator: 'Simulator',
    simulator_desc: 'Interactive matrix editor & safety checker',
    banking: 'Banking Application',
    banking_desc: 'Real-world loan approval analogy',
    theory: 'Theory',
    theory_desc: 'Learn the algorithm step-by-step',
    settings: 'Settings',
    theme: 'Theme',
    light_mode: 'Light',
    dark_mode: 'Dark',
    high_contrast: 'High Contrast',
    language: 'Language',
    reduce_motion: 'Reduce Motion',
    low_spec_mode: 'Low-Spec Mode',
    font_size: 'Font Size',
    font_small: 'Small',
    font_medium: 'Medium',
    font_large: 'Large',
    save_settings: 'Save Settings',
    theory_title: 'Understanding Banker\'s Algorithm',
    deadlock_title: 'What is Deadlock?',
    deadlock_text: 'Deadlock is a situation where a set of processes are blocked because each process is holding a resource and waiting for another resource acquired by some other process. In operating systems, this creates a circular wait condition.',
    algorithm_title: 'The Banker\'s Algorithm',
    algorithm_text: 'Developed by Edsger Dijkstra, the Banker\'s Algorithm is a deadlock avoidance algorithm that tests for safety by simulating the allocation of predetermined maximum possible amounts of all resources.',
    structures_title: 'Data Structures',
    available_desc: 'Vector of length m indicating the number of available resources of each type.',
    max_desc: 'n × m matrix defining the maximum demand of each process.',
    allocation_desc: 'n × m matrix defining the number of resources currently allocated to each process.',
    need_desc: 'n × m matrix indicating the remaining resource need of each process.',
    safety_title: 'Safety Algorithm',
    request_title: 'Resource Request Algorithm',
    request_intro: 'When process Pi requests resources, the following steps are taken:',
    simulator_title: 'Interactive Simulator',
    load_preset: 'Load Preset:',
    preset_safe: 'Safe State',
    preset_unsafe: 'Unsafe State',
    preset_banking: 'Banking',
    tab_matrices: 'Matrices Editor',
    tab_safety: 'Safety Check',
    tab_request: 'Request Simulation',
    num_processes: 'Number of Processes:',
    num_resources: 'Number of Resources:',
    generate: 'Generate Matrices',
    export_json: 'Export JSON',
    export_csv: 'Export CSV',
    import_json: 'Import JSON',
    check_safety: 'Check if System is Safe',
    step_mode: 'Step-by-Step Mode',
    run_check_message: 'Click "Check if System is Safe" to run the algorithm',
    select_process: 'Select Process:',
    request_vector: 'Request Vector:',
    simulate_request: 'Simulate Request',
    banking_title: 'Banking Application',
    banking_subtitle: 'Loan Approval with Safety Guarantee',
    analogy_processes: 'Processes → Customers',
    analogy_processes_desc: 'Each customer can request multiple loan types',
    analogy_resources: 'Resources → Loan Types',
    analogy_resources_desc: 'Home, Auto, Personal loans',
    analogy_available: 'Available → Bank Liquidity',
    analogy_available_desc: 'Current available funds per loan type',
    customer_portfolio: 'Customer Portfolio',
    load_demo: 'Load Demo Data',
    new_loan_request: 'New Loan Request',
    select_customer: 'Select Customer:',
    home_loan: 'Home Loan ($)',
    auto_loan: 'Auto Loan ($)',
    personal_loan: 'Personal Loan ($)',
    process_loan: 'Process Loan Request',
    system_safe: '✓ System is SAFE',
    system_unsafe: '✗ System is UNSAFE',
    safe_sequence: 'Safe Sequence:',
    deadlock_warning: 'Granting this request would lead to potential deadlock!',
    request_approved: '✓ Request APPROVED',
    request_denied: '✗ Request DENIED',
    request_exceeds: 'Request exceeds need!',
    insufficient_resources: 'Insufficient resources available!',
    available: 'Available',
    max: 'Max',
    allocation: 'Allocation',
    need: 'Need',
    process: 'Process',
    resource: 'Resource',
    work: 'Work',
    finish: 'Finish',
    login: 'Login',
    logout: 'Logout',
    email: 'Email',
    password: 'Password',
    sign_in: 'Sign In',
    sign_up: 'Sign Up',
    remember_me: 'Remember me',
    forgot_password: 'Forgot Password?',
    no_account: "Don't have an account?",
    login_welcome: 'Welcome Back',
    login_subtitle: 'Sign in to access the Banker\'s Algorithm Simulator',
    or_continue: 'Or continue with'
  },
  hi: {
    app_title: 'बैंकर का एल्गोरिथम',
    nav_home: 'होम',
    nav_theory: 'सिद्धांत',
    nav_simulator: 'सिमुलेटर',
    nav_banking: 'बैंकिंग',
    hero_window_title: 'बैंकर एल्गोरिथम सिमुलेटर',
    hero_title: 'बैंकर का एल्गोरिथम',
    hero_subtitle: 'डेडलॉक से बचाव सरल बनाया',
    hero_description: 'क्लासिक ऑपरेटिंग सिस्टम एल्गोरिथम का एक इंटरैक्टिव विज़ुअलाइज़ेशन जो सुरक्षित संसाधन आवंटन सुनिश्चित करके डेडलॉक को रोकता है।',
    run_check: 'सुरक्षा जांच चलाएं',
    learn_more: 'और जानें',
    simulator: 'सिमुलेटर',
    simulator_desc: 'इंटरैक्टिव मैट्रिक्स एडिटर और सुरक्षा परीक्षक',
    banking: 'बैंकिंग एप्लिकेशन',
    banking_desc: 'वास्तविक दुनिया ऋण अनुमोदन समानता',
    theory: 'सिद्धांत',
    theory_desc: 'चरण-दर-चरण एल्गोरिथम सीखें',
    settings: 'सेटिंग्स',
    theme: 'थीम',
    light_mode: 'लाइट',
    dark_mode: 'डार्क',
    high_contrast: 'उच्च कंट्रास्ट',
    language: 'भाषा',
    reduce_motion: 'गति कम करें',
    low_spec_mode: 'लो-स्पेक मोड',
    font_size: 'फ़ॉन्ट आकार',
    font_small: 'छोटा',
    font_medium: 'मध्यम',
    font_large: 'बड़ा',
    save_settings: 'सेटिंग्स सहेजें',
    theory_title: 'बैंकर के एल्गोरिथम को समझना',
    deadlock_title: 'डेडलॉक क्या है?',
    deadlock_text: 'डेडलॉक एक ऐसी स्थिति है जहां प्रक्रियाओं का एक सेट अवरुद्ध हो जाता है क्योंकि प्रत्येक प्रक्रिया एक संसाधन धारण कर रही है और किसी अन्य प्रक्रिया द्वारा अधिग्रहीत दूसरे संसाधन की प्रतीक्षा कर रही है।',
    algorithm_title: 'बैंकर का एल्गोरिथम',
    algorithm_text: 'एड्सगर डिजक्स्ट्रा द्वारा विकसित, बैंकर का एल्गोरिथम एक डेडलॉक परिहार एल्गोरिथम है जो सभी संसाधनों की पूर्व निर्धारित अधिकतम संभावित मात्राओं के आवंटन का अनुकरण करके सुरक्षा के लिए परीक्षण करता है।',
    structures_title: 'डेटा संरचनाएं',
    available_desc: 'लंबाई m का वेक्टर जो प्रत्येक प्रकार के उपलब्ध संसाधनों की संख्या को दर्शाता है।',
    max_desc: 'n × m मैट्रिक्स जो प्रत्येक प्रक्रिया की अधिकतम मांग को परिभाषित करता है।',
    allocation_desc: 'n × m मैट्रिक्स जो प्रत्येक प्रक्रिया को वर्तमान में आवंटित संसाधनों की संख्या को परिभाषित करता है।',
    need_desc: 'n × m मैट्रिक्स जो प्रत्येक प्रक्रिया की शेष संसाधन आवश्यकता को दर्शाता है।',
    safety_title: 'सुरक्षा एल्गोरिथम',
    request_title: 'संसाधन अनुरोध एल्गोरिथम',
    request_intro: 'जब प्रक्रिया Pi संसाधनों का अनुरोध करती है, तो निम्नलिखित चरण उठाए जाते हैं:',
    simulator_title: 'इंटरैक्टिव सिमुलेटर',
    load_preset: 'प्रीसेट लोड करें:',
    preset_safe: 'सुरक्षित स्थिति',
    preset_unsafe: 'असुरक्षित स्थिति',
    preset_banking: 'बैंकिंग',
    tab_matrices: 'मैट्रिसेस एडिटर',
    tab_safety: 'सुरक्षा जांच',
    tab_request: 'अनुरोध सिमुलेशन',
    num_processes: 'प्रक्रियाओं की संख्या:',
    num_resources: 'संसाधनों की संख्या:',
    generate: 'मैट्रिसेस जेनरेट करें',
    export_json: 'JSON निर्यात करें',
    export_csv: 'CSV निर्यात करें',
    import_json: 'JSON आयात करें',
    check_safety: 'जांचें कि सिस्टम सुरक्षित है',
    step_mode: 'चरण-दर-चरण मोड',
    run_check_message: 'एल्गोरिथम चलाने के लिए "जांचें कि सिस्टम सुरक्षित है" पर क्लिक करें',
    select_process: 'प्रक्रिया चुनें:',
    request_vector: 'अनुरोध वेक्टर:',
    simulate_request: 'अनुरोध सिमुलेट करें',
    banking_title: 'बैंकिंग एप्लिकेशन',
    banking_subtitle: 'सुरक्षा गारंटी के साथ ऋण अनुमोदन',
    analogy_processes: 'प्रक्रियाएं → ग्राहक',
    analogy_processes_desc: 'प्रत्येक ग्राहक कई ऋण प्रकारों का अनुरोध कर सकता है',
    analogy_resources: 'संसाधन → ऋण प्रकार',
    analogy_resources_desc: 'होम, ऑटो, व्यक्तिगत ऋण',
    analogy_available: 'उपलब्ध → बैंक तरलता',
    analogy_available_desc: 'प्रति ऋण प्रकार वर्तमान उपलब्ध धन',
    customer_portfolio: 'ग्राहक पोर्टफोलियो',
    load_demo: 'डेमो डेटा लोड करें',
    new_loan_request: 'नया ऋण अनुरोध',
    select_customer: 'ग्राहक चुनें:',
    home_loan: 'होम लोन ($)',
    auto_loan: 'ऑटो लोन ($)',
    personal_loan: 'व्यक्तिगत ऋण ($)',
    process_loan: 'ऋण अनुरोध प्रोसेस करें',
    system_safe: '✓ सिस्टम सुरक्षित है',
    system_unsafe: '✗ सिस्टम असुरक्षित है',
    safe_sequence: 'सुरक्षित अनुक्रम:',
    deadlock_warning: 'इस अनुरोध को स्वीकार करने से संभावित डेडलॉक हो सकता है!',
    request_approved: '✓ अनुरोध स्वीकृत',
    request_denied: '✗ अनुरोध अस्वीकृत',
    request_exceeds: 'अनुरोध आवश्यकता से अधिक है!',
    insufficient_resources: 'अपर्याप्त संसाधन उपलब्ध हैं!',
    available: 'उपलब्ध',
    max: 'अधिकतम',
    allocation: 'आवंटन',
    need: 'आवश्यकता',
    process: 'प्रक्रिया',
    resource: 'संसाधन',
    work: 'कार्य',
    finish: 'समाप्त',
    login: 'लॉगिन',
    logout: 'लॉगआउट',
    email: 'ईमेल',
    password: 'पासवर्ड',
    sign_in: 'साइन इन करें',
    sign_up: 'साइन अप करें',
    remember_me: 'मुझे याद रखें',
    forgot_password: 'पासवर्ड भूल गए?',
    no_account: 'खाता नह��ं है?',
    login_welcome: 'वापसी पर स्वागत है',
    login_subtitle: 'बैंकर एल्गोरिथम सिमुलेटर तक पहुंचने के लिए साइन इन करें',
    or_continue: 'या जारी रखें'
  },
  es: {
    app_title: 'Algoritmo del Banquero',
    nav_home: 'Inicio',
    nav_theory: 'Teoría',
    nav_simulator: 'Simulador',
    nav_banking: 'Bancario',
    hero_window_title: 'Simulador del Algoritmo del Banquero',
    hero_title: 'Algoritmo del Banquero',
    hero_subtitle: 'Evitación de Interbloqueo Simplificada',
    hero_description: 'Una visualización interactiva del algoritmo clásico de sistemas operativos que previene el interbloqueo garantizando la asignación segura de recursos.',
    run_check: 'Ejecutar Verificación',
    learn_more: 'Aprender Más',
    simulator: 'Simulador',
    simulator_desc: 'Editor de matrices interactivo y verificador de seguridad',
    banking: 'Aplicación Bancaria',
    banking_desc: 'Analogía de aprobación de préstamos del mundo real',
    theory: 'Teoría',
    theory_desc: 'Aprende el algoritmo paso a paso',
    settings: 'Configuración',
    theme: 'Tema',
    light_mode: 'Claro',
    dark_mode: 'Oscuro',
    high_contrast: 'Alto Contraste',
    language: 'Idioma',
    reduce_motion: 'Reducir Movimiento',
    low_spec_mode: 'Modo Bajo Rendimiento',
    font_size: 'Tamaño de Fuente',
    font_small: 'Pequeño',
    font_medium: 'Mediano',
    font_large: 'Grande',
    save_settings: 'Guardar Configuración',
    theory_title: 'Entendiendo el Algoritmo del Banquero',
    deadlock_title: '¿Qué es el Interbloqueo?',
    deadlock_text: 'El interbloqueo es una situación donde un conjunto de procesos están bloqueados porque cada proceso está reteniendo un recurso y esperando otro recurso adquirido por otro proceso.',
    algorithm_title: 'El Algoritmo del Banquero',
    algorithm_text: 'Desarrollado por Edsger Dijkstra, el Algoritmo del Banquero es un algoritmo de evitación de interbloqueo que prueba la seguridad simulando la asignación de cantidades máximas posibles predeterminadas de todos los recursos.',
    structures_title: 'Estructuras de Datos',
    available_desc: 'Vector de longitud m que indica el número de recursos disponibles de cada tipo.',
    max_desc: 'Matriz n × m que define la demanda máxima de cada proceso.',
    allocation_desc: 'Matriz n × m que define el número de recursos actualmente asignados a cada proceso.',
    need_desc: 'Matriz n × m que indica la necesidad restante de recursos de cada proceso.',
    safety_title: 'Algoritmo de Seguridad',
    request_title: 'Algoritmo de Solicitud de Recursos',
    request_intro: 'Cuando el proceso Pi solicita recursos, se toman los siguientes pasos:',
    simulator_title: 'Simulador Interactivo',
    load_preset: 'Cargar Preajuste:',
    preset_safe: 'Estado Seguro',
    preset_unsafe: 'Estado Inseguro',
    preset_banking: 'Bancario',
    tab_matrices: 'Editor de Matrices',
    tab_safety: 'Verificación de Seguridad',
    tab_request: 'Simulación de Solicitud',
    num_processes: 'Número de Procesos:',
    num_resources: 'Número de Recursos:',
    generate: 'Generar Matrices',
    export_json: 'Exportar JSON',
    export_csv: 'Exportar CSV',
    import_json: 'Importar JSON',
    check_safety: 'Verificar si el Sistema es Seguro',
    step_mode: 'Modo Paso a Paso',
    run_check_message: 'Haga clic en "Verificar si el Sistema es Seguro" para ejecutar el algoritmo',
    select_process: 'Seleccionar Proceso:',
    request_vector: 'Vector de Solicitud:',
    simulate_request: 'Simular Solicitud',
    banking_title: 'Aplicación Bancaria',
    banking_subtitle: 'Aprobación de Préstamos con Garantía de Seguridad',
    analogy_processes: 'Procesos → Clientes',
    analogy_processes_desc: 'Cada cliente puede solicitar múltiples tipos de préstamos',
    analogy_resources: 'Recursos → Tipos de Préstamos',
    analogy_resources_desc: 'Préstamos hipotecarios, de automóviles, personales',
    analogy_available: 'Disponible → Liquidez Bancaria',
    analogy_available_desc: 'Fondos actualmente disponibles por tipo de préstamo',
    customer_portfolio: 'Cartera de Clientes',
    load_demo: 'Cargar Datos de Demo',
    new_loan_request: 'Nueva Solicitud de Préstamo',
    select_customer: 'Seleccionar Cliente:',
    home_loan: 'Préstamo Hipotecario ($)',
    auto_loan: 'Préstamo de Auto ($)',
    personal_loan: 'Préstamo Personal ($)',
    process_loan: 'Procesar Solicitud de Préstamo',
    system_safe: '✓ Sistema es SEGURO',
    system_unsafe: '✗ Sistema es INSEGURO',
    safe_sequence: 'Secuencia Segura:',
    deadlock_warning: '¡Otorgar esta solicitud conduciría a un posible interbloqueo!',
    request_approved: '✓ Solicitud APROBADA',
    request_denied: '✗ Solicitud DENEGADA',
    request_exceeds: '¡La solicitud excede la necesidad!',
    insufficient_resources: '¡Recursos insuficientes disponibles!',
    available: 'Disponible',
    max: 'Máximo',
    allocation: 'Asignación',
    need: 'Necesidad',
    process: 'Proceso',
    resource: 'Recurso',
    work: 'Trabajo',
    finish: 'Finalizar',
    login: 'Iniciar Sesión',
    logout: 'Cerrar Sesión',
    email: 'Correo Electrónico',
    password: 'Contraseña',
    sign_in: 'Iniciar Sesión',
    sign_up: 'Registrarse',
    remember_me: 'Recuérdame',
    forgot_password: '¿Olvidaste tu contraseña?',
    no_account: '¿No tienes una cuenta?',
    login_welcome: 'Bienvenido de nuevo',
    login_subtitle: 'Inicia sesión para acceder al Simulador del Algoritmo del Banquero',
    or_continue: 'O continuar con'
  },
  ar: {
    app_title: 'خوارزمية المصرفي',
    nav_home: 'الرئيسية',
    nav_theory: 'النظرية',
    nav_simulator: 'المحاكي',
    nav_banking: 'البنكي',
    hero_window_title: 'محاكي خوارزمية المصرفي',
    hero_title: 'خوارزمية المصرفي',
    hero_subtitle: 'تجنب الجمود ببساطة',
    hero_description: 'تصور تفاعلي للخوارزمية الكلاسيكية لنظام التشغيل التي تمنع الجمود من خلال ضمان تخصيص آمن للموارد.',
    run_check: 'تشغيل فحص الأمان',
    learn_more: 'معرفة المزيد',
    simulator: 'المحاكي',
    simulator_desc: 'محرر مصفوفات تفاعلي وفاحص أمان',
    banking: 'التطبيق المصرفي',
    banking_desc: 'تشبيه الموافقة على القروض في العالم الحقيقي',
    theory: 'النظرية',
    theory_desc: 'تعلم الخوارزمية خطوة بخطوة',
    settings: 'الإعدادات',
    theme: 'المظهر',
    light_mode: 'فاتح',
    dark_mode: 'داكن',
    high_contrast: 'تباين عالي',
    language: 'اللغة',
    reduce_motion: 'تقليل الحركة',
    low_spec_mode: 'وضع الأداء المنخفض',
    font_size: 'حجم الخط',
    font_small: 'صغير',
    font_medium: 'متوسط',
    font_large: 'كبير',
    save_settings: 'حفظ الإعدادات',
    theory_title: 'فهم خوارزمية المصرفي',
    deadlock_title: 'ما هو الجمود؟',
    deadlock_text: 'الجمود هو حالة يتم فيها حظر مجموعة من العمليات لأن كل عملية تحمل موردًا وتنتظر موردًا آخر تم الحصول عليه بواسطة عملية أخرى.',
    algorithm_title: 'خوارزمية المصرفي',
    algorithm_text: 'تم تطويرها بواسطة إدسجر ديجكسترا، خوارزمية المصرفي هي خوارزمية تجنب الجمود التي تختبر السلامة من خلال محاكاة تخصيص كميات قصوى محتملة محددة مسبقًا من جميع الموارد.',
    structures_title: 'هياكل البيانات',
    available_desc: 'متجه بطول m يشير إلى عدد الموارد المتاحة من كل نوع.',
    max_desc: 'مصفوفة n × m تحدد الحد الأقصى للطلب لكل عملية.',
    allocation_desc: 'مصفوفة n × m تحدد عدد الموارد المخصصة حاليًا لكل عملية.',
    need_desc: 'مصفوفة n × m تشير إلى احتياج الموارد المتبقية لكل عملية.',
    safety_title: 'خوارزمية الأمان',
    request_title: 'خوارزمية طلب الموارد',
    request_intro: 'عندما تطلب العملية Pi موارد، يتم اتخاذ الخطوات التالية:',
    simulator_title: 'محاكي تفاعلي',
    load_preset: 'تحميل الإعداد المسبق:',
    preset_safe: 'حالة آمنة',
    preset_unsafe: 'حالة غير آمنة',
    preset_banking: 'البنكي',
    tab_matrices: 'محرر المصفوفات',
    tab_safety: 'فحص الأمان',
    tab_request: 'محاكاة الطلب',
    num_processes: 'عدد العمليات:',
    num_resources: 'عدد الموارد:',
    generate: 'إنشاء المصفوفات',
    export_json: 'تصدير JSON',
    export_csv: 'تصدير CSV',
    import_json: 'استيراد JSON',
    check_safety: 'التحقق من سلامة النظام',
    step_mode: 'وضع خطوة بخطوة',
    run_check_message: 'انقر على "التحقق من سلامة النظام" لتشغيل الخوارزمية',
    select_process: 'اختر العملية:',
    request_vector: 'متجه الطلب:',
    simulate_request: 'محاكاة الطلب',
    banking_title: 'التطبيق المصرفي',
    banking_subtitle: 'الموافقة على القروض مع ضمان الأمان',
    analogy_processes: 'العمليات ← العملاء',
    analogy_processes_desc: 'يمكن لكل عميل طلب أنواع قروض متعددة',
    analogy_resources: 'الموارد ← أنواع القروض',
    analogy_resources_desc: 'قروض المنازل والسيارات والشخصية',
    analogy_available: 'المتاح ← السيولة المصرفية',
    analogy_available_desc: 'الأموال المتاحة حاليًا لكل نوع قرض',
    customer_portfolio: 'محفظة العملاء',
    load_demo: 'تحميل بيانات العرض',
    new_loan_request: 'طلب قرض جديد',
    select_customer: 'اختر العميل:',
    home_loan: 'قرض المنزل ($)',
    auto_loan: 'قرض السيارة ($)',
    personal_loan: 'القرض الشخصي ($)',
    process_loan: 'معالجة طلب القرض',
    system_safe: '✓ النظام آمن',
    system_unsafe: '✗ النظام غير آمن',
    safe_sequence: 'التسلسل الآمن:',
    deadlock_warning: 'منح هذا الطلب سيؤدي إلى جمود محتمل!',
    request_approved: '✓ الطلب موافق عليه',
    request_denied: '✗ الطلب مرفوض',
    request_exceeds: 'الطلب يتجاوز الحاجة!',
    insufficient_resources: 'موارد غير كافية متاحة!',
    available: 'متاح',
    max: 'الأقصى',
    allocation: 'التخصيص',
    need: 'الحاجة',
    process: 'العملية',
    resource: 'المورد',
    work: 'العمل',
    finish: 'إنهاء',
    login: 'تسجيل الدخول',
    logout: 'تسجيل الخروج',
    email: 'البريد الإلكتروني',
    password: 'كلمة المرور',
    sign_in: 'تسجيل الدخول',
    sign_up: 'التسجيل',
    remember_me: 'تذكرني',
    forgot_password: 'نسيت كلمة المرور؟',
    no_account: 'ليس لديك حساب؟',
    login_welcome: 'مرحبا بعودتك',
    login_subtitle: 'قم بتسجيل الدخول للوصول إلى محاكي خوارزمية المصرفي',
    or_continue: 'أو المتابعة مع'
  }
};

class I18n {
  constructor() {
    this.currentLang = this.loadLanguage() || 'en';
    this.init();
  }

  init() {
    this.updateDirection();
    this.translatePage();
  }

  loadLanguage() {
    return window._appStorage?.language || navigator.language.split('-')[0];
  }

  saveLanguage(lang) {
    if (!window._appStorage) window._appStorage = {};
    window._appStorage.language = lang;
  }

  setLanguage(lang) {
    if (translations[lang]) {
      this.currentLang = lang;
      this.saveLanguage(lang);
      this.updateDirection();
      this.translatePage();
    }
  }

  t(key) {
    return translations[this.currentLang][key] || translations['en'][key] || key;
  }

  updateDirection() {
    const isRTL = this.currentLang === 'ar';
    document.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');
    document.documentElement.setAttribute('lang', this.currentLang);
  }

  translatePage() {
    document.querySelectorAll('[data-i18n]').forEach(element => {
      const key = element.getAttribute('data-i18n');
      const translation = this.t(key);
      
      if (element.tagName === 'INPUT' && element.type === 'button') {
        element.value = translation;
      } else if (element.tagName === 'INPUT' && element.placeholder) {
        element.placeholder = translation;
      } else {
        element.textContent = translation;
      }
    });
  }
}

// Export for use in other scripts
window.i18n = new I18n();